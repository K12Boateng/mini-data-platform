
version: "3.9"

services:
  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "${PGADMIN_DEFAULT_EMAIL}"
      PGADMIN_DEFAULT_PASSWORD: "${PGADMIN_DEFAULT_PASSWORD}"
    ports:
      - "5050:80"
    depends_on:
      - postgres

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: "${MINIO_ACCESS_KEY}"
      MINIO_ROOT_PASSWORD: "${MINIO_SECRET_KEY}"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - miniodata:/data

  metabase:
    image: metabase/metabase:latest
    ports:
      - "3001:3000"
    environment:
      MB_DB_TYPE: "postgres"
      MB_DB_DBNAME: "${POSTGRES_DB}"
      MB_DB_PORT: "5432"
      MB_DB_USER: "${POSTGRES_USER}"
      MB_DB_PASS: "${POSTGRES_PASSWORD}"
      MB_DB_HOST: "postgres"
    depends_on:
      - postgres

  airflow:
    image: apache/airflow:2.6.3
    environment:
      AIRFLOW__CORE__EXECUTOR: "LocalExecutor"
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: "postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}"
      AIRFLOW__LOGGING__LOGGING_LEVEL: "INFO"
      TZ: "UTC"
      AIRFLOW__CORE__DEFAULT_TIMEZONE: "utc"
      MINIO_ENDPOINT: "http://minio:9000"
      MINIO_ACCESS_KEY: "${MINIO_ACCESS_KEY}"
      MINIO_SECRET_KEY: "${MINIO_SECRET_KEY}"
      PYTHONPATH: "/opt/airflow:/opt/airflow/src:/opt/airflow/dags"
      # PYTHONPATH: "/opt/airflow/src:/opt/airflow/dags"
    volumes:
      - ../dags:/opt/airflow/dags
      - ../src:/opt/airflow/src
      - ../requirements.txt:/opt/airflow/requirements.txt
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - minio
    command: >
      bash -c "
      airflow db init &&
      airflow users create --username ${AIRFLOW_ADMIN_USER} --password ${AIRFLOW_ADMIN_PASSWORD} --firstname Air --lastname Flow --role Admin --email ${AIRFLOW_ADMIN_EMAIL} || true &&
      airflow webserver -p 8080 &
      airflow scheduler &
      airflow triggerer &
      tail -f /dev/null
      "

volumes:
  pgdata:
  miniodata:
